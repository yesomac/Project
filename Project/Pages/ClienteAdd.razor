@page "/ClienteAdd"
@page "/ClienteAdd/{id_cli:int}"
@using Data.Model
@using Data.Service

@inject IClienteService ClienteService
@inject NavigationManager NavigationManager

<h3>ClienteAdd</h3>
<EditForm Model="@cliente">
    <table>
        <tr>
            <td>Código:</td>
            <td><input type="text" @bind="cliente.id_cli" required /></td>
        </tr>
        <tr>
            <td>Nombre:</td>
            <td><input type="text" @bind="cliente.nom_cli" required /></td>
        </tr>
        <tr>
            <td>Apellido:</td>
            <td><input type="text" @bind="cliente.apell_cli" /></td>
        </tr>
        <tr>
            <td>Telefono:</td>
            <td><input type="text" @bind="cliente.tel_cli" /></td>
        </tr>
        <tr>
            <td>Email:</td>
            <td><input type="text" @bind="cliente.email_cli" /></td>
        </tr>
        <tr>
            <td>Direccion:</td>
            <td><input type="text" @bind="cliente.dir_cli" /></td>
        </tr>
        <tr>
            <td colspan="2">
                @if(id_cli > 0)
                {
                    <input type="submit" value="Actualizar" @onclick="ClienteUpdate" />
                } else
                {
                    <input type="submit" value="Adicionar" @onclick="ClienteInsert" />
                }
                <input type="button" value="Cancelar" @onclick="@Cancel"/>
            </td>
        </tr>

    </table>

</EditForm>


@code {
    [Parameter]
    public int id_cli { get; set;  }

    Cliente cliente = new Cliente();

    protected async Task ClienteInsert()
    {
        await ClienteService.ClienteInsert(cliente);
        NavigationManager.NavigateTo("/");
    }

    protected async Task ClienteUpdate()
    {
        await ClienteService.UpdateCliente(cliente);
        NavigationManager.NavigateTo("/");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

    protected override async Task OnInitializedAsync()
    {
        if(id_cli == 0)
        {

        } else
        {
            cliente = await ClienteService.GetCliente(id_cli);
        }
    }
}
